<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Hyoyeon Starter Blog RSS Feed]]></title><description><![CDATA[A starter blog demonstrating what Hyoyeon can do.]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 28 Feb 2025 05:41:36 GMT</lastBuildDate><item><title><![CDATA[Login chat note]]></title><description><![CDATA[메모 깃 클론이 안될때 클론이 프라이빗 리포지토리일때는 토큰혹은 ssh를 이용해야한다.
근데 이번에 토큰을 만들었다. 깃헙에서 토큰 만들기. GitHub에서 Personal Access Token 생성하기 GitHub…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/loginChat_note/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/loginChat_note/</guid><pubDate>Thu, 27 Feb 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h3&gt;메모&lt;/h3&gt;
&lt;p&gt;깃 클론이 안될때 클론이 프라이빗 리포지토리일때는 토큰혹은 ssh를 이용해야한다.
근데 이번에 토큰을 만들었다.&lt;/p&gt;
&lt;p&gt;깃헙에서 토큰 만들기.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GitHub에서 Personal Access Token 생성하기&lt;/li&gt;
&lt;li&gt;GitHub 계정에 로그인합니다.&lt;/li&gt;
&lt;li&gt;오른쪽 상단의 프로필 사진을 클릭하고 Settings로 이동합니다.&lt;/li&gt;
&lt;li&gt;왼쪽 메뉴에서 Developer settings &gt; Personal access tokens &gt; **Tokens (classic)**를 선택합니다.&lt;/li&gt;
&lt;li&gt;Generate new token &gt; **Generate new token (classic)**을 클릭합니다.&lt;/li&gt;
&lt;li&gt;**Token에 사용할 이름(노트)**과 유효기간을 설정합니다.&lt;/li&gt;
&lt;li&gt;필요한 **권한(scopes)**을 선택합니다:
&lt;ul&gt;
&lt;li&gt;기본적으로 repo 권한이 필요합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generate token 버튼을 클릭하면 토큰이 생성됩니다. 복사해 둡니다. (다시 볼 수 없으니 반드시 저장!)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이런식
ubuntu@ip-172-31-5-244:~/mygit/login-chat$ git clone https://ghp_&lt;a href=&quot;mailto:XETau79Qn9k5rHVp7SjDRWgQKjzCtm3tMbEr@github.com&quot;&gt;XETau79Qn9k5rHVp7SjDRWgQKjzCtm3tMbEr@github.com&lt;/a&gt;/Lee-Hyoyeon/login-chat.git&lt;/p&gt;
&lt;p&gt;aws에서 네트워크
시큐리티 그룹에 인바운드에 443 https를 추가했다.
인스턴스를 재부팅 했다.&lt;/p&gt;
&lt;p&gt;npm run build&lt;/p&gt;
&lt;p&gt;되는거
&lt;a href=&quot;http://hyoyeon.s3-website.us-east-2.amazonaws.com/&quot;&gt;http://hyoyeon.s3-website.us-east-2.amazonaws.com/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;aws 과금&lt;/h3&gt;
&lt;p&gt;Ec2 안돌아가고 vpc 오하이오빼고 다 삭제 vpc 다른거 여러개 돌아가는데 왜 ?
s3만 쓰기때매 과급 이유엑스
-&gt; case 그대로 유지 하고 다시 서비스 보냄&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;git log&lt;/h3&gt;
&lt;p&gt;디버깅 하는 방법
깃 리포지토리 들어가서 commits
내가 적었던 커밋 내용 보면서 뭐가 바꼈는지 보고 되돌려서 실행 시켜보기&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Reference&lt;/h4&gt;
&lt;p&gt;내 구글 클라우드 클라이언트- &lt;a href=&quot;https://console.cloud.google.com/auth/clients?invt=AbjhLw&amp;#x26;project=hy-project-439904&amp;#x26;inv=1&quot;&gt;https://console.cloud.google.com/auth/clients?invt=AbjhLw&amp;#x26;project=hy-project-439904&amp;#x26;inv=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;웹 서버 애플리케이션 설명
&lt;a href=&quot;https://developers.google.com/identity/protocols/oauth2/web-server#node.js_5&quot;&gt;https://developers.google.com/identity/protocols/oauth2/web-server#node.js_5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;참고했던 블로그 한국
&lt;a href=&quot;https://ahn3330.tistory.com/166&quot;&gt;https://ahn3330.tistory.com/166&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;구글 클라우드 가이드
&lt;a href=&quot;https://cloud.google.com/apigee/docs/api-platform/security/oauth/access-tokens?hl=ko&quot;&gt;https://cloud.google.com/apigee/docs/api-platform/security/oauth/access-tokens?hl=ko&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;깃에 있는 모드모듈 지우기
git rm -r --cached .
git add .
git commit -m &quot;remove node_modules&quot;
git push&lt;/p&gt;</content:encoded></item><item><title><![CDATA[python]]></title><description><![CDATA[한투 파이썬 실행 (조코딩 한투플젝) hy_test git:(main) ✗ python3.13 -m pip install --upgrade pip [notice] A new release of pip is available: 24.3.1 -> 25.…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/python/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/python/</guid><pubDate>Mon, 10 Feb 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;한투 파이썬 실행 (조코딩 한투플젝)&lt;/h4&gt;
&lt;p&gt;hy_test git:(main) ✗ python3.13 -m pip install --upgrade pip&lt;/p&gt;
&lt;p&gt;[notice] A new release of pip is available: 24.3.1 -&gt; 25.0
[notice] To update, run: python3.13 -m pip install --upgrade pip
error: externally-managed-environment&lt;/p&gt;
&lt;p&gt;× This environment is externally managed
╰─&gt; To install Python packages system-wide, try brew install
xyz, where xyz is the package you are trying to
install.
이런 에러가 났을 대 가상 환경에서 인스톨&lt;/p&gt;
&lt;p&gt;➜ hy_test git:(main) ✗ python3 -m venv venv
➜ hy_test git:(main) ✗ source venv/bin/activate
(venv) ➜ hy_test git:(main) ✗ python3 -m pip install requests
(venv) ➜ hy_test git:(main) ✗ pip install python-dotenv
(venv) ➜ hy_test git:(main) ✗ python3 KoreaStockAutoTrade.py 파일 실행&lt;/p&gt;</content:encoded></item></channel></rss>